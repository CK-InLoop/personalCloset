{"ast":null,"code":"var _jsxFileName = \"E:\\\\ME\\\\New folder\\\\Study\\\\Placements\\\\Internships\\\\projects\\\\python\\\\wardrobe\\\\frontend\\\\src\\\\components\\\\VirtualTryOn.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Pose } from '@mediapipe/pose';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VirtualTryOn = ({\n  top,\n  bottom,\n  onePiece,\n  className\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const poseRef = useRef(null);\n  const modelImageRef = useRef(null);\n\n  // This effect initializes the Pose instance and sets up the model image.\n  // It runs only once when the component mounts.\n  useEffect(() => {\n    const pose = new Pose({\n      locateFile: file => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`\n    });\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: true,\n      smoothSegmentation: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5\n    });\n    poseRef.current = pose;\n    const modelImage = new Image();\n    modelImage.crossOrigin = 'anonymous';\n    modelImage.src = '/model-removebg-preview.png';\n    modelImageRef.current = modelImage;\n    const canvas = canvasRef.current;\n    if (canvas) {\n      modelImage.onload = () => {\n        canvas.width = modelImage.width;\n        canvas.height = modelImage.height;\n        // Initial pose detection\n        pose.send({\n          image: modelImage\n        });\n      };\n    }\n    return () => {\n      pose.close();\n    };\n  }, []);\n\n  // This effect handles the drawing logic.\n  // It runs whenever the clothing props (top, bottom, onePiece) change.\n  useEffect(() => {\n    const pose = poseRef.current;\n    const modelImage = modelImageRef.current;\n    if (!pose || !modelImage || !modelImage.complete) {\n      return;\n    }\n    pose.onResults(results => {\n      const canvas = canvasRef.current;\n      const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext('2d');\n      if (!results.poseLandmarks || !canvas || !ctx) {\n        return;\n      }\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(modelImage, 0, 0, canvas.width, canvas.height);\n      const drawClothing = (clothingImage, category) => {\n        const landmarks = results.poseLandmarks;\n        if (!landmarks) return;\n        const leftShoulder = landmarks[11];\n        const rightShoulder = landmarks[12];\n        const leftHip = landmarks[23];\n        const rightHip = landmarks[24];\n        const leftKnee = landmarks[25];\n        const rightKnee = landmarks[26];\n        if (category === 'top' && leftShoulder && rightShoulder && leftHip && rightHip) {\n          const torsoWidth = Math.abs(rightShoulder.x - leftShoulder.x) * canvas.width;\n          const torsoHeight = Math.abs(leftHip.y - leftShoulder.y) * canvas.height;\n          const centerX = (leftShoulder.x + rightShoulder.x) / 2 * canvas.width;\n          const topY = leftShoulder.y * canvas.height;\n          const scaleFactor = 1.5;\n          const finalWidth = torsoWidth * scaleFactor;\n          const finalHeight = torsoHeight * 1.2;\n          ctx.drawImage(clothingImage, centerX - finalWidth / 2, topY, finalWidth, finalHeight);\n        } else if (category === 'bottom' && leftHip && rightHip && leftKnee && rightKnee) {\n          const hipWidth = Math.abs(rightHip.x - leftHip.x) * canvas.width;\n          const legHeight = Math.abs(leftKnee.y - leftHip.y) * canvas.height;\n          const centerX = (leftHip.x + rightHip.x) / 2 * canvas.width;\n          const topY = leftHip.y * canvas.height;\n          const scaleFactor = 1.2;\n          const finalWidth = hipWidth * scaleFactor;\n          const finalHeight = legHeight * 1.1;\n          ctx.drawImage(clothingImage, centerX - finalWidth / 2, topY, finalWidth, finalHeight);\n        } else if (category === 'onePiece' && leftShoulder && rightShoulder && leftKnee && rightKnee) {\n          const bodyWidth = Math.abs(rightShoulder.x - leftShoulder.x) * canvas.width;\n          const bodyHeight = Math.abs(leftKnee.y - leftShoulder.y) * canvas.height;\n          const centerX = (leftShoulder.x + rightShoulder.x) / 2 * canvas.width;\n          const topY = leftShoulder.y * canvas.height;\n          const scaleFactor = 1.5;\n          const finalWidth = bodyWidth * scaleFactor;\n          const finalHeight = bodyHeight * 1.05;\n          ctx.drawImage(clothingImage, centerX - finalWidth / 2, topY, finalWidth, finalHeight);\n        }\n      };\n\n      // Preload and draw images\n      const imagesToLoad = [];\n      if (top) imagesToLoad.push({\n        src: top,\n        category: 'top'\n      });\n      if (bottom) imagesToLoad.push({\n        src: bottom,\n        category: 'bottom'\n      });\n      if (onePiece) imagesToLoad.push({\n        src: onePiece,\n        category: 'onePiece'\n      });\n      let loadedCount = 0;\n      if (imagesToLoad.length === 0) {\n        return;\n      }\n      imagesToLoad.forEach(item => {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.src = item.src;\n        img.onload = () => {\n          drawClothing(img, item.category);\n          loadedCount++;\n        };\n      });\n    });\n\n    // Trigger a new pose detection whenever clothing changes\n    pose.send({\n      image: modelImage\n    });\n  }, [top, bottom, onePiece]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 10\n  }, this);\n};\n_s(VirtualTryOn, \"4C+zt0qUqq93W73Yfy5Ib6gz2Bw=\");\n_c = VirtualTryOn;\nexport default VirtualTryOn;\nvar _c;\n$RefreshReg$(_c, \"VirtualTryOn\");","map":{"version":3,"names":["React","useRef","useEffect","Pose","jsxDEV","_jsxDEV","VirtualTryOn","top","bottom","onePiece","className","_s","canvasRef","poseRef","modelImageRef","pose","locateFile","file","setOptions","modelComplexity","smoothLandmarks","enableSegmentation","smoothSegmentation","minDetectionConfidence","minTrackingConfidence","current","modelImage","Image","crossOrigin","src","canvas","onload","width","height","send","image","close","complete","onResults","results","ctx","getContext","poseLandmarks","clearRect","drawImage","drawClothing","clothingImage","category","landmarks","leftShoulder","rightShoulder","leftHip","rightHip","leftKnee","rightKnee","torsoWidth","Math","abs","x","torsoHeight","y","centerX","topY","scaleFactor","finalWidth","finalHeight","hipWidth","legHeight","bodyWidth","bodyHeight","imagesToLoad","push","loadedCount","length","forEach","item","img","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/ME/New folder/Study/Placements/Internships/projects/python/wardrobe/frontend/src/components/VirtualTryOn.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Pose } from '@mediapipe/pose';\n\ninterface VirtualTryOnProps {\n  top?: string;\n  bottom?: string;\n  onePiece?: string;\n  className?: string;\n}\n\nconst VirtualTryOn: React.FC<VirtualTryOnProps> = ({ top, bottom, onePiece, className }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const poseRef = useRef<any>(null);\n  const modelImageRef = useRef<HTMLImageElement | null>(null);\n\n  // This effect initializes the Pose instance and sets up the model image.\n  // It runs only once when the component mounts.\n  useEffect(() => {\n    const pose = new Pose({\n      locateFile: (file: string) => `https://cdn.jsdelivr.net/npm/@mediapipe/pose/${file}`,\n    });\n\n    pose.setOptions({\n      modelComplexity: 1,\n      smoothLandmarks: true,\n      enableSegmentation: true,\n      smoothSegmentation: true,\n      minDetectionConfidence: 0.5,\n      minTrackingConfidence: 0.5,\n    });\n\n    poseRef.current = pose;\n\n    const modelImage = new Image();\n    modelImage.crossOrigin = 'anonymous';\n    modelImage.src = '/model-removebg-preview.png';\n    modelImageRef.current = modelImage;\n\n    const canvas = canvasRef.current;\n    if (canvas) {\n        modelImage.onload = () => {\n            canvas.width = modelImage.width;\n            canvas.height = modelImage.height;\n            // Initial pose detection\n            pose.send({ image: modelImage });\n        };\n    }\n\n    return () => {\n      pose.close();\n    };\n  }, []);\n\n  // This effect handles the drawing logic.\n  // It runs whenever the clothing props (top, bottom, onePiece) change.\n  useEffect(() => {\n    const pose = poseRef.current;\n    const modelImage = modelImageRef.current;\n\n    if (!pose || !modelImage || !modelImage.complete) {\n      return;\n    }\n\n    pose.onResults((results: any) => {\n      const canvas = canvasRef.current;\n      const ctx = canvas?.getContext('2d');\n\n      if (!results.poseLandmarks || !canvas || !ctx) {\n        return;\n      }\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.drawImage(modelImage, 0, 0, canvas.width, canvas.height);\n\n      const drawClothing = (clothingImage: HTMLImageElement, category: 'top' | 'bottom' | 'onePiece') => {\n        const landmarks = results.poseLandmarks;\n        if (!landmarks) return;\n\n        const leftShoulder = landmarks[11];\n        const rightShoulder = landmarks[12];\n        const leftHip = landmarks[23];\n        const rightHip = landmarks[24];\n        const leftKnee = landmarks[25];\n        const rightKnee = landmarks[26];\n\n        if (category === 'top' && leftShoulder && rightShoulder && leftHip && rightHip) {\n          const torsoWidth = Math.abs(rightShoulder.x - leftShoulder.x) * canvas.width;\n          const torsoHeight = Math.abs(leftHip.y - leftShoulder.y) * canvas.height;\n          const centerX = ((leftShoulder.x + rightShoulder.x) / 2) * canvas.width;\n          const topY = leftShoulder.y * canvas.height;\n          const scaleFactor = 1.5;\n          const finalWidth = torsoWidth * scaleFactor;\n          const finalHeight = torsoHeight * 1.2;\n          ctx.drawImage(clothingImage, centerX - finalWidth / 2, topY, finalWidth, finalHeight);\n        } else if (category === 'bottom' && leftHip && rightHip && leftKnee && rightKnee) {\n          const hipWidth = Math.abs(rightHip.x - leftHip.x) * canvas.width;\n          const legHeight = Math.abs(leftKnee.y - leftHip.y) * canvas.height;\n          const centerX = ((leftHip.x + rightHip.x) / 2) * canvas.width;\n          const topY = leftHip.y * canvas.height;\n          const scaleFactor = 1.2;\n          const finalWidth = hipWidth * scaleFactor;\n          const finalHeight = legHeight * 1.1;\n          ctx.drawImage(clothingImage, centerX - finalWidth / 2, topY, finalWidth, finalHeight);\n        } else if (category === 'onePiece' && leftShoulder && rightShoulder && leftKnee && rightKnee) {\n          const bodyWidth = Math.abs(rightShoulder.x - leftShoulder.x) * canvas.width;\n          const bodyHeight = Math.abs(leftKnee.y - leftShoulder.y) * canvas.height;\n          const centerX = ((leftShoulder.x + rightShoulder.x) / 2) * canvas.width;\n          const topY = leftShoulder.y * canvas.height;\n          const scaleFactor = 1.5;\n          const finalWidth = bodyWidth * scaleFactor;\n          const finalHeight = bodyHeight * 1.05;\n          ctx.drawImage(clothingImage, centerX - finalWidth / 2, topY, finalWidth, finalHeight);\n        }\n      };\n\n      // Preload and draw images\n      const imagesToLoad = [];\n      if (top) imagesToLoad.push({ src: top, category: 'top' });\n      if (bottom) imagesToLoad.push({ src: bottom, category: 'bottom' });\n      if (onePiece) imagesToLoad.push({ src: onePiece, category: 'onePiece' });\n\n      let loadedCount = 0;\n      if (imagesToLoad.length === 0) {\n        return;\n      }\n\n      imagesToLoad.forEach(item => {\n        const img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.src = item.src;\n        img.onload = () => {\n          drawClothing(img, item.category as any);\n          loadedCount++;\n        };\n      });\n    });\n\n    // Trigger a new pose detection whenever clothing changes\n    pose.send({ image: modelImage });\n\n  }, [top, bottom, onePiece]);\n\n  return <canvas ref={canvasRef} className={className} />;\n};\n\nexport default VirtualTryOn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}