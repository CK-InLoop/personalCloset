{"ast":null,"code":"var _jsxFileName = \"E:\\\\ME\\\\New folder\\\\Study\\\\Placements\\\\Internships\\\\projects\\\\python\\\\wardrobe\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst API_URL = 'http://localhost:5000/api';\n\n// Configure axios to include credentials\naxios.defaults.withCredentials = true;\n\n// Auto-login user for demo purposes\nconst demoUser = {\n  id: '1',\n  username: 'demo',\n  email: 'demo@example.com'\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(demoUser); // Auto-login with demo user\n  const [loading, setLoading] = useState(false); // Set to false since we're not checking auth\n\n  // Skip the auth check since we're auto-logging in\n  useEffect(() => {\n    setUser(demoUser);\n  }, []);\n  const login = async (username, password) => {\n    // Skip actual login and use demo user\n    setUser(demoUser);\n    return {\n      data: {\n        message: 'Login successful'\n      }\n    };\n  };\n  const register = async (username, email, password) => {\n    // Skip actual registration and use demo user\n    setUser(demoUser);\n    return {\n      data: {\n        message: 'Registration successful'\n      }\n    };\n  };\n  const logout = () => {\n    // Just clear the user, no need to call the backend\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!user,\n      loading\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"dfWMkenW0aLIEoxP8JeKdf80wY0=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","API_URL","defaults","withCredentials","demoUser","id","username","email","AuthProvider","children","_s","user","setUser","loading","setLoading","login","password","data","message","register","logout","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["E:/ME/New folder/Study/Placements/Internships/projects/python/wardrobe/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<any>;\n  register: (username: string, email: string, password: string) => Promise<any>;\n  logout: () => void;\n  isAuthenticated: boolean;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst API_URL = 'http://localhost:5000/api';\n\n// Configure axios to include credentials\naxios.defaults.withCredentials = true;\n\n// Auto-login user for demo purposes\nconst demoUser: User = {\n  id: '1',\n  username: 'demo',\n  email: 'demo@example.com'\n};\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<User | null>(demoUser); // Auto-login with demo user\n  const [loading, setLoading] = useState(false); // Set to false since we're not checking auth\n\n  // Skip the auth check since we're auto-logging in\n  useEffect(() => {\n    setUser(demoUser);\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    // Skip actual login and use demo user\n    setUser(demoUser);\n    return { data: { message: 'Login successful' } };\n  };\n\n  const register = async (username: string, email: string, password: string) => {\n    // Skip actual registration and use demo user\n    setUser(demoUser);\n    return { data: { message: 'Registration successful' } };\n  };\n\n  const logout = () => {\n    // Just clear the user, no need to call the backend\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        login,\n        register,\n        logout,\n        isAuthenticated: !!user,\n        loading,\n      }}\n    >\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAaC,SAAS,QAAQ,OAAO;AACjF,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAiB1B,MAAMC,WAAW,gBAAGP,aAAa,CAA8BQ,SAAS,CAAC;AAEzE,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACAL,KAAK,CAACM,QAAQ,CAACC,eAAe,GAAG,IAAI;;AAErC;AACA,MAAMC,QAAc,GAAG;EACrBC,EAAE,EAAE,GAAG;EACPC,QAAQ,EAAE,MAAM;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAcU,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACR,QAAQ,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,KAAK,GAAG,MAAAA,CAAOT,QAAgB,EAAEU,QAAgB,KAAK;IAC1D;IACAJ,OAAO,CAACR,QAAQ,CAAC;IACjB,OAAO;MAAEa,IAAI,EAAE;QAAEC,OAAO,EAAE;MAAmB;IAAE,CAAC;EAClD,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOb,QAAgB,EAAEC,KAAa,EAAES,QAAgB,KAAK;IAC5E;IACAJ,OAAO,CAACR,QAAQ,CAAC;IACjB,OAAO;MAAEa,IAAI,EAAE;QAAEC,OAAO,EAAE;MAA0B;IAAE,CAAC;EACzD,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnB;IACAR,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACsB,QAAQ;IACnBC,KAAK,EAAE;MACLX,IAAI;MACJI,KAAK;MACLI,QAAQ;MACRC,MAAM;MACNG,eAAe,EAAE,CAAC,CAACZ,IAAI;MACvBE;IACF,CAAE;IAAAJ,QAAA,EAED,CAACI,OAAO,IAAIJ;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAACjB,EAAA,CAxCWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA0CzB,OAAO,MAAMqB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGtC,UAAU,CAACM,WAAW,CAAC;EACvC,IAAIgC,OAAO,KAAK/B,SAAS,EAAE;IACzB,MAAM,IAAIgC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}