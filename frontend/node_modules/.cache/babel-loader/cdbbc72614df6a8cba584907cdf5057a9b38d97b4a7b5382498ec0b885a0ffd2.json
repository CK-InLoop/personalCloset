{"ast":null,"code":"var _jsxFileName = \"E:\\\\ME\\\\New folder\\\\Study\\\\Placements\\\\Internships\\\\projects\\\\python\\\\wardrobe\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst API_URL = 'http://localhost:5000/api';\n\n// Configure axios to include credentials\naxios.defaults.withCredentials = true;\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuth = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/user`, {\n          withCredentials: true\n        });\n        setUser(response.data);\n      } catch (error) {\n        console.error('Auth check failed', error);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, {\n        username,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      // Get user data after successful login\n      const userResponse = await axios.get(`${API_URL}/auth/user`, {\n        withCredentials: true\n      });\n      setUser(userResponse.data);\n      return response;\n    } catch (error) {\n      console.error('Login failed', error);\n      throw error;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, {\n        username,\n        email,\n        password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      // Auto-login after registration\n      await login(username, password);\n      return response;\n    } catch (error) {\n      console.error('Registration failed', error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await axios.post(`${API_URL}/auth/logout`, {}, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.error('Logout failed', error);\n    } finally {\n      setUser(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      isAuthenticated: !!user,\n      loading\n    },\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","API_URL","defaults","withCredentials","AuthProvider","children","_s","user","setUser","loading","setLoading","checkAuth","response","get","data","error","console","login","username","password","post","headers","userResponse","register","email","logout","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["E:/ME/New folder/Study/Placements/Internships/projects/python/wardrobe/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, ReactNode, useEffect } from 'react';\nimport axios from 'axios';\n\ninterface User {\n  id: string;\n  username: string;\n  email: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<any>;\n  register: (username: string, email: string, password: string) => Promise<any>;\n  logout: () => void;\n  isAuthenticated: boolean;\n  loading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nconst API_URL = 'http://localhost:5000/api';\n\n// Configure axios to include credentials\naxios.defaults.withCredentials = true;\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in\n    const checkAuth = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/auth/user`, {\n          withCredentials: true\n        });\n        setUser(response.data);\n      } catch (error) {\n        console.error('Auth check failed', error);\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  const login = async (username: string, password: string) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, \n        { username, password },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          withCredentials: true\n        }\n      );\n      // Get user data after successful login\n      const userResponse = await axios.get(`${API_URL}/auth/user`, {\n        withCredentials: true\n      });\n      setUser(userResponse.data);\n      return response;\n    } catch (error) {\n      console.error('Login failed', error);\n      throw error;\n    }\n  };\n\n  const register = async (username: string, email: string, password: string) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, { \n        username, \n        email, \n        password \n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        withCredentials: true\n      });\n      // Auto-login after registration\n      await login(username, password);\n      return response;\n    } catch (error) {\n      console.error('Registration failed', error);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await axios.post(`${API_URL}/auth/logout`, {}, { withCredentials: true });\n    } catch (error) {\n      console.error('Logout failed', error);\n    } finally {\n      setUser(null);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        login,\n        register,\n        logout,\n        isAuthenticated: !!user,\n        loading,\n      }}\n    >\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}